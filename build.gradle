import groovy.json.JsonSlurper
import groovy.json.JsonOutput

buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id("io.spinnaker.plugin.bundler").version("$spinnakerGradleVersion")
    id "com.palantir.docker" version "0.33.0"
}

version 'v1.0.2'

spinnakerBundle {
    pluginId = "Armory.RunMultiplePipelines"
    description = "This plugin adds a new custom stage to Spinnaker to trigger multiple child pipelines."
    provider = "https://armory.io"
    version = rootProject.version
}

subprojects { project ->
    group = "io.armory.plugin.smp"
    version = rootProject.version
    apply plugin: "maven-publish"
}

task version() {
    println(version)
}

docker {
    def dockerVersion = version.substring(1)
    dockerfile project.file("build-tools/Dockerfile")
    def registry = "docker.io"
    def registryOrg = "daper9812"
    tag "$dockerVersion", "$dockerVersion" 
    name "$registry/$registryOrg/$rootProject.name-plugin:$dockerVersion"
    files project.file("build/distributions"), project.file("build-tools/install.sh")
    buildArgs([PLUGIN_ID: "$rootProject.name-$version"])
    copySpec.from("build/distributions").into("distributions")
}

task generatePluginsJson {
    doLast {
        def pluginInfoFile = new File("$buildDir/distributions/plugin-info.json")
        def pluginInfo = new JsonSlurper().parse(pluginInfoFile)

        pluginInfo.releases[0].url = "file:///opt/spinnaker/lib/local-plugins/eap/${version}/eap-${version}.zip"
        def plugins = [pluginInfo]
        File dockerPlugins = new File("$buildDir/distributions/plugins-docker.json")
        dockerPlugins.write(JsonOutput.prettyPrint(JsonOutput.toJson(plugins)))
    }
}

releaseBundle.finalizedBy generatePluginsJson
