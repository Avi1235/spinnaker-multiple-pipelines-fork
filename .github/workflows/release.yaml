name: Release

on:
  push:
    tags:
      - 'v*'

jobs:

  Build:
    name: Release Plugin
    runs-on: ubuntu-latest

    env:
      ORG_GRADLE_PROJECT_artifactory_token: '${{secrets.ARTIFACTORY_TOKEN}}'
   
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: 11
     
      - name: Run tests
        run: ./gradlew test
      
      - name: Build
        run: ./gradlew releaseBundle
      
      - name: Archive build artifacts
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: build/distributions
      
      - name: Get project info
        id: get_project_info
        run: |
          echo ::set-output name=PROJECT::$(basename `pwd`)
          echo ::set-output name=PROJECT_KEBAB::$(basename `pwd` | sed 's/\([a-z0-9]\)\([A-Z]\)/\1_\L\2/g' | tr '[:upper:]' '[:lower:]' )
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
          echo ::set-output name=REPO::${GITHUB_REPOSITORY}

      - name: Create release in GitHub
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload release asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./build/distributions/${{ steps.get_project_info.outputs.PROJECT }}-${{ steps.get_project_info.outputs.VERSION }}.zip
          asset_name: ${{ steps.get_project_info.outputs.PROJECT }}-${{ steps.get_project_info.outputs.VERSION }}.zip
          asset_content_type: application/zip
